across_exp1 <- df_long_exp1 %>%
filter(condition == 'across')
# within
### cold
model_across_cold_exp1 = glmmTMB::glmmTMB(beta ~ manipulation * cold_probe + procedure + trial_n +
(1|ID),
family = glmmTMB::beta_family(),
ziformula = ~1+manipulation,
data = across_exp1 %>% filter(quality == 'cold'),
na.action = na.omit)
stats_across_cold_exp1_control = summary_stat(model_across_cold_exp1,5,r)
stats_across_cold_exp1_TGI = summary_stat(
update(model_across_cold_exp1, data = across_exp1 %>% filter(quality == 'cold') %>% mutate(manipulation = as.factor(manipulation), manipulation = relevel(manipulation, ref ="TGI"))),
2,r)
###warm
model_across_warm_exp1 = glmmTMB::glmmTMB(beta ~ manipulation * cold_probe + procedure + trial_n +
(1|ID),
family = glmmTMB::beta_family(),
ziformula = ~1+manipulation,
data = across_exp1 %>% filter(quality == 'warm'),
na.action = na.omit)
stats_across_warm_exp1_control = summary_stat(model_across_warm_exp1,5,r)
stats_across_warm_exp1_TGI = summary_stat(
update(model_across_warm_exp1, data = across_exp1 %>% filter(quality == 'warm') %>% mutate(manipulation = as.factor(manipulation), manipulation = relevel(manipulation, ref ="TGI"))),
2,r)
## burning
across_exp1 <- df_long_exp1 %>%
filter(condition == 'across' & responder == 1)
# within
model_across_burn_exp1 = glmmTMB::glmmTMB(beta ~ manipulation * cold_probe + procedure + trial_n +
(1|ID),
family = glmmTMB::beta_family(),
ziformula = ~1+manipulation,
data = across_exp1 %>% filter(quality == 'burn'),
na.action = na.omit)
stats_across_burn_exp1_control = summary_stat(model_across_burn_exp1,5,r)
stats_across_burn_exp1_TGI = summary_stat(
update(model_across_burn_exp1, data = across_exp1 %>% filter(quality == 'burn') %>% mutate(manipulation = as.factor(manipulation), manipulation = relevel(manipulation, ref ="TGI"))),
2,r)
######### Exp 2 (Hypothesis 1)
# Cold
model_cold_exp2 = glmmTMB::glmmTMB(beta ~ manipulation * condition * cold_cond + trial_n +
(1|ID) + (1|order),
family = glmmTMB::beta_family(),
ziformula = ~1+manipulation,
data = df_long_exp2 %>% filter(quality == 'cold'),
na.action = na.omit)
stats_model_cold_exp2 = summary_stat(model_cold_exp2, 2,r)
# Warm
model_warm_exp2 = glmmTMB::glmmTMB(beta ~ manipulation * condition * cold_cond +
trial_n + (1|ID) + (1|order),
family = glmmTMB::beta_family(),
ziformula = ~1+manipulation,
data = df_long_exp2 %>% filter(quality == 'warm'),
na.action = na.omit)
stats_model_warm_exp2 = summary_stat(model_warm_exp2, 2,r)
# Burn
#The burning hypothesis is only for participants that experience burning TGI
#(aka are responders)
# First, remove non-responders
df_resp_exp2 <- df_long_exp2 %>%
filter(responder == 1)
# check n
length(unique(df_resp_exp2$ID))
model_burn_exp2 = glmmTMB::glmmTMB(beta ~ manipulation * condition * cold_cond +
trial_n + (1|ID) + (1|order),
family = glmmTMB::beta_family(),
ziformula = ~1+manipulation,
data = df_resp_exp2 %>% filter(quality == 'burn'),
na.action = na.omit)
stats_model_burn_exp2 = summary_stat(model_burn_exp2, 2,r)
## hypothsis 2 (within)
within_exp2 <- df_long_exp2 %>%
filter(condition == 'within')
# within
### cold
model_within_cold_exp2 = glmmTMB::glmmTMB(beta ~ manipulation * cold_probe + procedure + trial_n +
(1|ID),
family = glmmTMB::beta_family(),
ziformula = ~1+manipulation,
data = within_exp2 %>% filter(quality == 'cold'),
na.action = na.omit)
stats_within_cold_exp2_control = summary_stat(model_within_cold_exp2,5,r)
stats_within_cold_exp2_TGI = summary_stat(
update(model_within_cold_exp2, data = within_exp2 %>% filter(quality == 'cold') %>% mutate(manipulation = as.factor(manipulation), manipulation = relevel(manipulation, ref ="TGI"))),
2,r)
###warm
model_within_warm_exp2 = glmmTMB::glmmTMB(beta ~ manipulation * cold_probe + procedure + trial_n +
(1|ID),
family = glmmTMB::beta_family(),
ziformula = ~1+manipulation,
data = within_exp2 %>% filter(quality == 'warm'),
na.action = na.omit)
stats_within_warm_exp2_control = summary_stat(model_within_warm_exp2,5,r)
stats_within_warm_exp2_TGI = summary_stat(
update(model_within_warm_exp2, data = within_exp2 %>% filter(quality == 'warm') %>% mutate(manipulation = as.factor(manipulation), manipulation = relevel(manipulation, ref ="TGI"))),
2,r)
## burning
within_exp2 <- df_long_exp2 %>%
filter(condition == 'within' & responder == 1)
# within
model_within_burn_exp2 = glmmTMB::glmmTMB(beta ~ manipulation * cold_probe + procedure + trial_n +
(1|ID),
family = glmmTMB::beta_family(),
ziformula = ~1+manipulation,
data = within_exp2 %>% filter(quality == 'burn'),
na.action = na.omit)
stats_within_burn_exp2_control = summary_stat(model_within_burn_exp2,5,r)
stats_within_burn_exp2_TGI = summary_stat(
update(model_within_burn_exp2, data = within_exp2 %>% filter(quality == 'burn') %>% mutate(manipulation = as.factor(manipulation), manipulation = relevel(manipulation, ref ="TGI"))),
2,r)
#hypothesis 2 (across)
across_exp2 <- df_long_exp2 %>%
filter(condition == 'across')
### cold
model_across_cold_exp2 = glmmTMB::glmmTMB(beta ~ manipulation * cold_probe + procedure + trial_n +
(1|ID),
family = glmmTMB::beta_family(),
ziformula = ~1+manipulation,
data = across_exp2 %>% filter(quality == 'cold'),
na.action = na.omit)
stats_across_cold_exp2_control = summary_stat(model_across_cold_exp2,5,r)
stats_across_cold_exp2_TGI = summary_stat(
update(model_across_cold_exp2, data = across_exp2 %>% filter(quality == 'cold') %>% mutate(manipulation = as.factor(manipulation), manipulation = relevel(manipulation, ref ="TGI"))),
2,r)
###warm
model_across_warm_exp2 = glmmTMB::glmmTMB(beta ~ manipulation * cold_probe + procedure + trial_n +
(1|ID),
family = glmmTMB::beta_family(),
ziformula = ~1+manipulation,
data = across_exp2 %>% filter(quality == 'warm'),
na.action = na.omit)
stats_across_warm_exp2_control = summary_stat(model_across_warm_exp2,5,r)
stats_across_warm_exp2_TGI = summary_stat(
update(model_across_warm_exp2, data = across_exp2 %>% filter(quality == 'warm') %>% mutate(manipulation = as.factor(manipulation), manipulation = relevel(manipulation, ref ="TGI"))),
2,r)
## burning
across_exp2 <- df_long_exp2 %>%
filter(condition == 'across' & responder == 1)
# within
model_across_burn_exp2 = glmmTMB::glmmTMB(beta ~ manipulation * cold_probe + procedure + trial_n +
(1|ID),
family = glmmTMB::beta_family(),
ziformula = ~1+manipulation,
data = across_exp2 %>% filter(quality == 'burn'),
na.action = na.omit)
stats_across_burn_exp2_control = summary_stat(model_across_burn_exp2,5,r)
stats_across_burn_exp2_TGI = summary_stat(
update(model_across_burn_exp2, data = across_exp2 %>% filter(quality == 'burn') %>% mutate(manipulation = as.factor(manipulation), manipulation = relevel(manipulation, ref ="TGI"))),
2,r)
summary(model_across_cold_exp2)
summary(model_across_cold_exp1)
stats_across_cold_exp2_TGI
stats_across_cold_exp2_control
if (!require("pacman")) install.packages("pacman")
pacman::p_load(boot, broom, broom.mixed, brms, car, caret, corrplot, DHARMa, gamlss,
ggeffects, gghalves, ggpol, ggpubr, glmmTMB, groupdata2, lme4, lmerTest,
modelsummary, MuMIn, polycor, RColorBrewer, rcompanion, reshape2, Rmisc,
rsample, rstatix, simr, tibble, tidyverse, wesanderson, patchwork, cowplot
)
source(here::here("scripts","utility.R"))
#get models
source(here::here("scripts","models.R"))
stats = statistics(rerun = F)
list2env(stats, envir=environment())
#save.image("~/tgi-spinal/Workspace/stats.RData")
ggdraw() +
draw_image(magick::image_read(here::here("figures","figure1.PNG")), scale = 1)
plot1()
plot2()
summary(model_cold_exp1)
summary(model_warm_exp1)
summary(model_burn_exp1)
summary(model_burn_exp2)
summary(model_warm_exp1)
summary(model_cold_exp1)
if (!require("pacman")) install.packages("pacman")
pacman::p_load(boot, broom, broom.mixed, brms, car, caret, corrplot, DHARMa, gamlss,
ggeffects, gghalves, ggpol, ggpubr, glmmTMB, groupdata2, lme4, lmerTest,
modelsummary, MuMIn, polycor, RColorBrewer, rcompanion, reshape2, Rmisc,
rsample, rstatix, simr, tibble, tidyverse, wesanderson, patchwork, cowplot
)
source(here::here("scripts","utility.R"))
#get models
source(here::here("scripts","models.R"))
experiment1 = prep_data(file.path("data", 'STGI_exp1_compiled-data.csv'))
experiment2 = prep_data(file.path("data", 'STGI_exp2_compiled-data.csv'))
df_long_exp1 = experiment1$df_long
df_long_exp2 = experiment2$df_long
######### Exp 1 (Hypothesis 1)
## hypothsis 1
# Cold
model_cold_exp1 = glmmTMB::glmmTMB(beta ~ manipulation * condition * cold_cond + trial_n +
(1|ID) + (1|order),
family = glmmTMB::beta_family(),
ziformula = ~1+manipulation,
data = df_long_exp1 %>% filter(quality == 'cold'),
na.action = na.omit)
experiment1 = prep_data(file.path("data", 'STGI_exp1_compiled-data.csv'))
experiment2 = prep_data(file.path("data", 'STGI_exp2_compiled-data.csv'))
df_long_exp1 = experiment1$df_long
df_long_exp2 = experiment2$df_long
######### Exp 1 (Hypothesis 1)
## hypothsis 1
# Cold
model_cold_exp1 = glmmTMB::glmmTMB(beta ~ manipulation * condition * cold_cond + trial_n +
(1|ID) + (1|order),
family = glmmTMB::beta_family(),
ziformula = ~1+manipulation,
data = df_long_exp1 %>% filter(quality == 'cold'),
na.action = na.omit)
stats_model_cold_exp1 = summary_stat(model_cold_exp1, 2,r)
r = 2
experiment1 = prep_data(file.path("data", 'STGI_exp1_compiled-data.csv'))
experiment2 = prep_data(file.path("data", 'STGI_exp2_compiled-data.csv'))
df_long_exp1 = experiment1$df_long
df_long_exp2 = experiment2$df_long
######### Exp 1 (Hypothesis 1)
## hypothsis 1
# Cold
model_cold_exp1 = glmmTMB::glmmTMB(beta ~ manipulation * condition * cold_cond + trial_n +
(1|ID) + (1|order),
family = glmmTMB::beta_family(),
ziformula = ~1+manipulation,
data = df_long_exp1 %>% filter(quality == 'cold'),
na.action = na.omit)
stats_model_cold_exp1 = summary_stat(model_cold_exp1, 2,r)
# Warm
model_warm_exp1 = glmmTMB::glmmTMB(beta ~ manipulation * condition * cold_cond +
trial_n + (1|ID) + (1|order),
family = glmmTMB::beta_family(),
ziformula = ~1+manipulation,
data = df_long_exp1 %>% filter(quality == 'warm'),
na.action = na.omit)
stats_model_warm_exp1 = summary_stat(model_warm_exp1, 2,r)
# Burn
#The burning hypothesis is only for participants that experience burning TGI
#(aka are responders)
# First, remove non-responders
df_resp_exp1 <- df_long_exp1 %>%
filter(responder == 1)
# check n
length(unique(df_resp_exp1$ID))
model_burn_exp1 = glmmTMB::glmmTMB(beta ~ manipulation * condition * cold_cond +
trial_n + (1|ID) + (1|order),
family = glmmTMB::beta_family(),
ziformula = ~1+manipulation,
data = df_resp_exp1 %>% filter(quality == 'burn'),
na.action = na.omit)
stats_model_burn_exp1 = summary_stat(model_burn_exp1, 2,r)
## hypothsis 2 (within)
within_exp1 <- df_long_exp1 %>%
filter(condition == 'within')
# within
### cold
model_within_cold_exp1 = glmmTMB::glmmTMB(beta ~ manipulation * cold_probe + procedure + trial_n +
(1|ID),
family = glmmTMB::beta_family(),
ziformula = ~1+manipulation,
data = within_exp1 %>% filter(quality == 'cold'),
na.action = na.omit)
stats_within_cold_exp1_control = summary_stat(model_within_cold_exp1,5,r)
stats_within_cold_exp1_TGI = summary_stat(
update(model_within_cold_exp1, data = within_exp1 %>% filter(quality == 'cold') %>% mutate(manipulation = as.factor(manipulation), manipulation = relevel(manipulation, ref ="TGI"))),
2,r)
###warm
model_within_warm_exp1 = glmmTMB::glmmTMB(beta ~ manipulation * cold_probe + procedure + trial_n +
(1|ID),
family = glmmTMB::beta_family(),
ziformula = ~1+manipulation,
data = within_exp1 %>% filter(quality == 'warm'),
na.action = na.omit)
stats_within_warm_exp1_control = summary_stat(model_within_warm_exp1,5,r)
stats_within_warm_exp1_TGI = summary_stat(
update(model_within_warm_exp1, data = within_exp1 %>% filter(quality == 'warm') %>% mutate(manipulation = as.factor(manipulation), manipulation = relevel(manipulation, ref ="TGI"))),
2,2)
## burning
within_exp1 <- df_long_exp1 %>%
filter(condition == 'within' & responder == 1)
# within
model_within_burn_exp1 = glmmTMB::glmmTMB(beta ~ manipulation * cold_probe + procedure + trial_n +
(1|ID),
family = glmmTMB::beta_family(),
ziformula = ~1+manipulation,
data = within_exp1 %>% filter(quality == 'burn'),
na.action = na.omit)
stats_within_burn_exp1_control = summary_stat(model_within_burn_exp1,5,r)
stats_within_burn_exp1_TGI = summary_stat(
update(model_within_burn_exp1, data = within_exp1 %>% filter(quality == 'burn') %>% mutate(manipulation = as.factor(manipulation), manipulation = relevel(manipulation, ref ="TGI"))),
2,r)
## hypothsis 2 (within)
across_exp1 <- df_long_exp1 %>%
filter(condition == 'across')
# within
### cold
model_across_cold_exp1 = glmmTMB::glmmTMB(beta ~ manipulation * cold_probe + procedure + trial_n +
(1|ID),
family = glmmTMB::beta_family(),
ziformula = ~1+manipulation,
data = across_exp1 %>% filter(quality == 'cold'),
na.action = na.omit)
stats_across_cold_exp1_control = summary_stat(model_across_cold_exp1,5,r)
stats_across_cold_exp1_TGI = summary_stat(
update(model_across_cold_exp1, data = across_exp1 %>% filter(quality == 'cold') %>% mutate(manipulation = as.factor(manipulation), manipulation = relevel(manipulation, ref ="TGI"))),
2,r)
###warm
model_across_warm_exp1 = glmmTMB::glmmTMB(beta ~ manipulation * cold_probe + procedure + trial_n +
(1|ID),
family = glmmTMB::beta_family(),
ziformula = ~1+manipulation,
data = across_exp1 %>% filter(quality == 'warm'),
na.action = na.omit)
stats_across_warm_exp1_control = summary_stat(model_across_warm_exp1,5,r)
stats_across_warm_exp1_TGI = summary_stat(
update(model_across_warm_exp1, data = across_exp1 %>% filter(quality == 'warm') %>% mutate(manipulation = as.factor(manipulation), manipulation = relevel(manipulation, ref ="TGI"))),
2,r)
## burning
across_exp1 <- df_long_exp1 %>%
filter(condition == 'across' & responder == 1)
# within
model_across_burn_exp1 = glmmTMB::glmmTMB(beta ~ manipulation * cold_probe + procedure + trial_n +
(1|ID),
family = glmmTMB::beta_family(),
ziformula = ~1+manipulation,
data = across_exp1 %>% filter(quality == 'burn'),
na.action = na.omit)
stats_across_burn_exp1_control = summary_stat(model_across_burn_exp1,5,r)
stats_across_burn_exp1_TGI = summary_stat(
update(model_across_burn_exp1, data = across_exp1 %>% filter(quality == 'burn') %>% mutate(manipulation = as.factor(manipulation), manipulation = relevel(manipulation, ref ="TGI"))),
2,r)
######### Exp 2 (Hypothesis 1)
# Cold
model_cold_exp2 = glmmTMB::glmmTMB(beta ~ manipulation * condition * cold_cond + trial_n +
(1|ID) + (1|order),
family = glmmTMB::beta_family(),
ziformula = ~1+manipulation,
data = df_long_exp2 %>% filter(quality == 'cold'),
na.action = na.omit)
stats_model_cold_exp2 = summary_stat(model_cold_exp2, 2,r)
# Warm
model_warm_exp2 = glmmTMB::glmmTMB(beta ~ manipulation * condition * cold_cond +
trial_n + (1|ID) + (1|order),
family = glmmTMB::beta_family(),
ziformula = ~1+manipulation,
data = df_long_exp2 %>% filter(quality == 'warm'),
na.action = na.omit)
stats_model_warm_exp2 = summary_stat(model_warm_exp2, 2,r)
# Burn
#The burning hypothesis is only for participants that experience burning TGI
#(aka are responders)
# First, remove non-responders
df_resp_exp2 <- df_long_exp2 %>%
filter(responder == 1)
# check n
length(unique(df_resp_exp2$ID))
model_burn_exp2 = glmmTMB::glmmTMB(beta ~ manipulation * condition * cold_cond +
trial_n + (1|ID) + (1|order),
family = glmmTMB::beta_family(),
ziformula = ~1+manipulation,
data = df_resp_exp2 %>% filter(quality == 'burn'),
na.action = na.omit)
stats_model_burn_exp2 = summary_stat(model_burn_exp2, 2,r)
## hypothsis 2 (within)
within_exp2 <- df_long_exp2 %>%
filter(condition == 'within')
# within
### cold
model_within_cold_exp2 = glmmTMB::glmmTMB(beta ~ manipulation * cold_probe + procedure + trial_n +
(1|ID),
family = glmmTMB::beta_family(),
ziformula = ~1+manipulation,
data = within_exp2 %>% filter(quality == 'cold'),
na.action = na.omit)
stats_within_cold_exp2_control = summary_stat(model_within_cold_exp2,5,r)
stats_within_cold_exp2_TGI = summary_stat(
update(model_within_cold_exp2, data = within_exp2 %>% filter(quality == 'cold') %>% mutate(manipulation = as.factor(manipulation), manipulation = relevel(manipulation, ref ="TGI"))),
2,r)
###warm
model_within_warm_exp2 = glmmTMB::glmmTMB(beta ~ manipulation * cold_probe + procedure + trial_n +
(1|ID),
family = glmmTMB::beta_family(),
ziformula = ~1+manipulation,
data = within_exp2 %>% filter(quality == 'warm'),
na.action = na.omit)
stats_within_warm_exp2_control = summary_stat(model_within_warm_exp2,5,r)
stats_within_warm_exp2_TGI = summary_stat(
update(model_within_warm_exp2, data = within_exp2 %>% filter(quality == 'warm') %>% mutate(manipulation = as.factor(manipulation), manipulation = relevel(manipulation, ref ="TGI"))),
2,r)
## burning
within_exp2 <- df_long_exp2 %>%
filter(condition == 'within' & responder == 1)
# within
model_within_burn_exp2 = glmmTMB::glmmTMB(beta ~ manipulation * cold_probe + procedure + trial_n +
(1|ID),
family = glmmTMB::beta_family(),
ziformula = ~1+manipulation,
data = within_exp2 %>% filter(quality == 'burn'),
na.action = na.omit)
stats_within_burn_exp2_control = summary_stat(model_within_burn_exp2,5,r)
stats_within_burn_exp2_TGI = summary_stat(
update(model_within_burn_exp2, data = within_exp2 %>% filter(quality == 'burn') %>% mutate(manipulation = as.factor(manipulation), manipulation = relevel(manipulation, ref ="TGI"))),
2,r)
#hypothesis 2 (across)
across_exp2 <- df_long_exp2 %>%
filter(condition == 'across')
### cold
model_across_cold_exp2 = glmmTMB::glmmTMB(beta ~ manipulation * cold_probe + procedure + trial_n +
(1|ID),
family = glmmTMB::beta_family(),
ziformula = ~1+manipulation,
data = across_exp2 %>% filter(quality == 'cold'),
na.action = na.omit)
stats_across_cold_exp2_control = summary_stat(model_across_cold_exp2,5,r)
stats_across_cold_exp2_TGI = summary_stat(
update(model_across_cold_exp2, data = across_exp2 %>% filter(quality == 'cold') %>% mutate(manipulation = as.factor(manipulation), manipulation = relevel(manipulation, ref ="TGI"))),
2,r)
###warm
model_across_warm_exp2 = glmmTMB::glmmTMB(beta ~ manipulation * cold_probe + procedure + trial_n +
(1|ID),
family = glmmTMB::beta_family(),
ziformula = ~1+manipulation,
data = across_exp2 %>% filter(quality == 'warm'),
na.action = na.omit)
stats_across_warm_exp2_control = summary_stat(model_across_warm_exp2,5,r)
stats_across_warm_exp2_TGI = summary_stat(
update(model_across_warm_exp2, data = across_exp2 %>% filter(quality == 'warm') %>% mutate(manipulation = as.factor(manipulation), manipulation = relevel(manipulation, ref ="TGI"))),
2,r)
## burning
across_exp2 <- df_long_exp2 %>%
filter(condition == 'across' & responder == 1)
# within
model_across_burn_exp2 = glmmTMB::glmmTMB(beta ~ manipulation * cold_probe + procedure + trial_n +
(1|ID),
family = glmmTMB::beta_family(),
ziformula = ~1+manipulation,
data = across_exp2 %>% filter(quality == 'burn'),
na.action = na.omit)
stats_across_burn_exp2_control = summary_stat(model_across_burn_exp2,5,r)
stats_across_burn_exp2_TGI = summary_stat(
update(model_across_burn_exp2, data = across_exp2 %>% filter(quality == 'burn') %>% mutate(manipulation = as.factor(manipulation), manipulation = relevel(manipulation, ref ="TGI"))),
2,r)
df_long_exp1$condition
df_long_exp1$cold_cond
summary(model_cold_exp1)
## hypothsis 1
# Cold
model_cold_exp1 = glmmTMB::glmmTMB(beta ~ manipulation * condition + trial_n +
(1|ID) + (1|order),
family = glmmTMB::beta_family(),
ziformula = ~1+manipulation,
data = df_long_exp1 %>% filter(quality == 'cold'),
na.action = na.omit)
summary(model_cold_exp1)
within_exp1
summary(model_burn_exp1)
summary(model_burn_exp2)
View(df_long_exp1)
if (!require("pacman")) install.packages("pacman")
pacman::p_load(boot, broom, broom.mixed, brms, car, caret, corrplot, DHARMa, gamlss,
ggeffects, gghalves, ggpol, ggpubr, glmmTMB, groupdata2, lme4, lmerTest,
modelsummary, MuMIn, polycor, RColorBrewer, rcompanion, reshape2, Rmisc,
rsample, rstatix, simr, tibble, tidyverse, wesanderson, patchwork, cowplot
)
source(here::here("scripts","utility.R"))
#get models
source(here::here("scripts","models.R"))
stats = statistics(rerun = F)
list2env(stats, envir=environment())
#save.image("~/tgi-spinal/Workspace/stats.RData")
ggdraw() +
draw_image(magick::image_read(here::here("figures","figure1.PNG")), scale = 1)
plot1()
plot2()
summary(model_cold_exp1)
## hypothsis 1
# Cold
model_cold_exp1 = glmmTMB::glmmTMB(beta ~ manipulation * condition * cold_cond + trial_n +
(1|ID) + (1|order),
family = glmmTMB::beta_family(),
ziformula = ~1+manipulation * condition * cold_cond ,
data = df_long_exp1 %>% filter(quality == 'cold'),
na.action = na.omit)
summary(model_cold_exp1)
# Warm
model_warm_exp1 = glmmTMB::glmmTMB(beta ~ manipulation * condition * cold_cond +
trial_n + (1|ID) + (1|order),
family = glmmTMB::beta_family(),
ziformula = ~1+manipulation * condition * cold_cond,
data = df_long_exp1 %>% filter(quality == 'warm'),
na.action = na.omit)
summary(model_warm_exp1)
model_burn_exp1 = glmmTMB::glmmTMB(beta ~ manipulation * condition * cold_cond +
trial_n + (1|ID) + (1|order),
family = glmmTMB::beta_family(),
ziformula = ~1+manipulation * condition * cold_cond,
data = df_resp_exp1 %>% filter(quality == 'burn'),
na.action = na.omit)
summary(model_burn_exp1)
df_resp_exp1 %>% filter(beta == 0) %>% summarize(n=n())
n(df_resp_exp1 )
df_resp_exp1 %>% summarize(n())
df_resp_exp1 %>% summarize(n())/291
df_resp_exp1 %>% summarize(n())/2915
2915/df_resp_exp1 %>% summarize(n())
## hypothsis 1
# Cold
model_cold_exp1 = glmmTMB::glmmTMB(beta ~ manipulation * condition * cold_cond + trial_n +
(1|ID) + (1|order),
family = glmmTMB::beta_family(),
ziformula = ~1+manipulation,
data = df_long_exp1 %>% filter(quality == 'cold'),
na.action = na.omit)
